The odsAdvAnalysis widget exposes the results of an aggregation function over a context. It uses the ODS Explore API V2.1 and its ODSQL language, which offers greater flexibility than the v1.
The parameters for this widgets are dynamic, which implies two benefits:
First, changes in context parameters will refresh the results of the widget.
Second, AngularJS variables are accepted as attributes.
The results can then be displayed in three different ways:
To create specific visualizations, using custom-made HTML and CSS
A table view is also available using odsAdvTable (examples are provided below).
As the widget is creating an AngularJS variable, it can be displayed through a simple {{myData.results[X]}}. This usage is not documented here, as it regards HTML code and widgets already documented in the introduction.
For retro-compatibility purposes, similarly to API V2.0, if the groupBy is done on a field that contains null values, they will be removed. If you are using the limit parameter, this may cause the widget to return one less category as expected, because the null group was included. You can prevent this by using where to exclude null values from this field, using IS NOT NULL (e.g. my_field IS NOT NULL).
Examples of requests to make
How to compute a weighted average:
In this example, the widget will return the average height of the trees according to the population size of each species in Paris districts.
context="ctx"
ctx-domain="https://documentation-resources.opendatasoft.com/"
ctx-dataset="les-arbres-remarquables-de-paris">
ods-adv-analysis-context="ctx"
ods-adv-analysis-select="(sum(hauteur_en_m)/count(espece)) as y_axis"
ods-adv-analysis-where="arrondissement LIKE 'paris'"
ods-adv-analysis-group-by="espece as x_axis">
{{myData}}
How to create multiple time series:
In this example, the widget returns the average gold price by month in 2018 and 2019. The group-by year allows to compare each year with the others.
context="ctx"
ctx-domain="https://documentation-resources.opendatasoft.com/"
ctx-dataset="gold-prices">
ods-adv-analysis-context="ctx"
ods-adv-analysis-select="avg(price) as y_axis"
ods-adv-analysis-where="date > date'2017'"
ods-adv-analysis-group-by="month(date) as x_axis, year(date) as series">
{{myData}}
How to use odsAdvancedAnalysis with odsAdvTable
odsAdvancedTable was designed to accept the JSON created by odsAdvancedAnalysis. Its purpose is to offer a table view that matches the widget and to provide an accessible way of displaying data as an alternative to charts.
For more information, see the documentation for odsAdvTable.
context="ctx"
ctx-domain="https://documentation-resources.opendatasoft.com/"
ctx-dataset="les-arbres-remarquables-de-paris">
ods-adv-analysis-context="ctx"
ods-adv-analysis-select="count(objectid) as quantite_arbres, AVG(circonference_en_cm) as circonference_moyenne"
ods-adv-analysis-group-by="arrondissement">
data="myData"
sticky-header="true"
sticky-first-column="true"
columns-order="['arrondissement', 'quantite_arbres', 'circonference_moyenne']"
totals="['quantite_arbres']"
sort="arrondissement ASC">
Usage
as attribute
ods-adv-analysis-context="{string}"
[ods-adv-analysis-select]="{string}"
[ods-adv-analysis-where]="{string}"
[ods-adv-analysis-group-by]="{string}"
[ods-adv-analysis-order-by]="{string}"
[ods-adv-analysis-limit]="{string}">
...
Directive info
This directive creates new scope.
Parameters
Param Type Details
odsAdvAnalysis
string
This name can be used as the data attribute of the display widgets that support it (e.g. odsAdvTable).
odsAdvAnalysisContext
string
Insert here the name of the context to use.
[odsAdvAnalysisSelect]
string
Type here the query to make. More use cases are available below. The documentation about the ODSQL select clause is available here. This clause will contain the values (i.e., the y-axis in case of a chart).
[odsAdvAnalysisWhere]
string
This parameter allows to filter rows with a combination of expressions. The documentation about the ODSQL where clause is available here.
[odsAdvAnalysisGroupBy]
string
This parameter helps regroup the calculation according to specific criteria. The group-by in this clause can become either y-axis or series in a chart. The documentation about the ODSQL GROUP BY clause is available here.
[odsAdvAnalysisOrderBy]
string
This parameter is used to sort the results of an aggregation using the ASC and DESC keywords (e.g., myField ASC or ). The documentation about the ODSQL ORDER BY clause is available here.
[odsAdvAnalysisLimit]
string
Limits the number of items to return.